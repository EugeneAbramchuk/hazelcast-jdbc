name: Release version test
on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '8' ]
        architecture: [ 'x64' ]
        distribution: [ 'adopt' ]
    name: Build release version with JDK ${{ matrix.java }}
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          ref: ${{ github.ref }}
      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }}
          distribution: ${{ matrix.distribution }}
          server-id: release-repository
          server-username: MAVEN_RELEASE_USERNAME
          server-password: MAVEN_RELEASE_PASSWORD
          architecture: ${{ matrix.architecture }}
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - uses: actions/cache@v2.1.5
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn -DskipTests package
        env:
          MAVEN_RELEASE_USERNAME: ${{ secrets.MAVEN_RELEASE_USERNAME }}
          MAVEN_RELEASE_PASSWORD: ${{ secrets.MAVEN_RELEASE_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: Upload release asset
        uses: actions/github-script@v4
        with:
          script: |
            const tag = context.payload.ref.replace(/\/refs\/tags\//, '');
            const release = github.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: tag
            });
            release.then(function(data) {
              console.log(data);
            });

